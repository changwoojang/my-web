<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/img/**" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/action/captcha/**" security="none"/>
    
    
    <http auto-config="false" use-expressions="true">
    	<!-- channel permission -->
    	<intercept-url pattern="/action/channel/**" access="hasAnyRole('ROLE_USER1', 'ROLE_USER', 'ROLE_ADMIN')"/>
    	
    	<!-- product permission -->
    	<intercept-url pattern="/action/product/**" access="hasAnyRole('ROLE_USER2', 'ROLE_USER', 'ROLE_ADMIN')"/>
    	<intercept-url pattern="/action/package/**" access="hasAnyRole('ROLE_USER2', 'ROLE_USER', 'ROLE_ADMIN')"/>
    	
    	<!-- notice permission -->
    	<intercept-url pattern="/action/notice/**" access="hasAnyRole('ROLE_USER3', 'ROLE_USER', 'ROLE_ADMIN')"/>
    	
    	<!-- admin permission -->
    	<intercept-url pattern="/action/management/**" access="hasAnyRole('ROLE_ADMIN')"/>
    	
    	<intercept-url pattern="/action/home/**" access="hasAnyRole('ROLE_USER1', 'ROLE_USER2', 'ROLE_USER3', 'ROLE_USER', 'ROLE_ADMIN')"/>
    	<intercept-url pattern="/action/api/**" access="hasAnyRole('ROLE_USER1', 'ROLE_USER2', 'ROLE_USER3', 'ROLE_USER', 'ROLE_ADMIN')"/>
    	<intercept-url pattern="/action/search/**" access="hasAnyRole('ROLE_USER1', 'ROLE_USER2', 'ROLE_USER3', 'ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/action/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <form-login login-page="/login" authentication-failure-url="/login"
                    login-processing-url="/j_security_check" always-use-default-target="true"/>
        <logout logout-url="/logout"/>
        <session-management session-fixation-protection="newSession" >
            <concurrency-control max-sessions="5" error-if-maximum-exceeded="false"/>
        </session-management>
        
        <!-- Access denied page -->
        <access-denied-handler error-page="/action/error/access_denied"/>
        
        <!-- csrf Attack defense -->
        <csrf />
    </http>

    <authentication-manager erase-credentials="false">
         <authentication-provider>
			<password-encoder hash="sha"/>
			<user-service>
                <user name="changwoo" password="0afc3727c9731dace854a86f436379c44ba81b9e" authorities="ROLE_ADMIN"/>
                <!--<user name="admin" password="d5a2f1b7f0636bf2eb24cdab3cac134c3a45aa69" authorities="ROLE_ADMIN, ROLE_USER"/>-->
            </user-service>
        </authentication-provider>
      <!--   <authentication-provider user-service-ref="userSecurityService">
        	<password-encoder hash="sha"/>
        </authentication-provider> -->
    </authentication-manager>
	
	
	<!-- <bean id="encoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/> -->
		
	<!-- 
    <global-method-security>
        <protect-pointcut expression="execution(* *..service.UserManager.removeUser(..))" access="ROLE_ADMIN"/>
    </global-method-security>
	-->

</beans:beans>